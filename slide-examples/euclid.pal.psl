
  principal A B C D E
  
  def euclid-rec : nat, int{yao:C,D}, int{yao:C,D} → int{yao:C,D}
  def euclid-rec(n, a, b) =
    if n ≡{int} 0
    then b
    else (b ≡{yao:C,D} 0) 
         ?{yao:C,D} a 
         ◇{yao:C,D} euclid-rec(n -{nat} 1, b, a %{yao:C,D} b)
  
  def euclid : ℤ{yao:C,D}, ℤ{yao:C,D} → ℤ{yao:C,D}
  def euclid(a, b) =
    let n = 93
    in (a ⋗{yao:C,D} b) ?{yao:C,D} euclid-rec(n, a, b) ◇{yao:C,D} euclid-rec(n, b, a)
  
  def main : () →{inp:A,B,rev:E} int{E}
  def main() =
    let ab = {par:A,B} read{int}("euclid.txt")
    in reveal{E} euclid(share{yao:C,D}(ab.A), share{yao:C,D}(ab.B))



