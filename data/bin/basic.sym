principal A B

-- gmw ≡ semi-honest, N-party, boolean sharing

def main () = par {A,B}
  let a = share [gmw, ℕ#64 : {A} → {A,B}] (par {A} read ℕ#64 from "basic.txt") in
  let b = share [gmw, ℕ#64 : {B} → {A,B}] (par {B} read ℕ#64 from "basic.txt") in
  let sum = a + b in
  reveal [gmw, ℕ#64 : {A,B} → {A,B}] sum * sum