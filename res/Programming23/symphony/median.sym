principal A B

def P = { A, B }

def read-int s = 6

def read-and-share p s =
  share [yao, int : p -> P] (par { p } read-int s)

def read-ints p =
  (read-and-share p "median-smalls.txt",
   read-and-share p "median-bigs.txt")

def main () = par P
  let (smallA, bigA) = read-ints A in
  let (smallB, bigB) = read-ints B in

  let b1 = smallA <= bigB in
  reveal [yao, int : P -> A ]
    (min-muxable
      (mux if b1 then smallB else smallA)
      (mux if b1 then bigA   else smallB) )
