principal NullParty A[32]

def P = A + { NullParty }

def read-int = 6

def main () = par A
  reveal [yao, party : A -> A.0] snd
    (list_fold (solo A as p in read-int) as p.bid
      on share [yao, int * int * party : A.0 -> A ] (0, 0, NullParty)
      as winner in
        let (highBid, secondBid, highBidder) = winner in
        let bidShr = share [yao, P : p -> A] bid in
             mux if bidShr > highBid   then (bidShr,  highBid, p)
        else mux if bidShr > secondBid then (highBid, bidShr,  highBidder)
        else winner)
