principal NoParty Alice Bob Charlie

def P = { Alice, Bob, Charlie }
def Q = P + { NoParty }

def MAX_DIST = 1000

def read-int = 6

def main () = par P
  let locs = solo P as p in read-int in

  bundleMap (fun p0 loc0 -> reveal [ yao, P : P -> p0 ]
    (let loc0Shr = share [ yao, int : p0 -> P ] loc0 in

    fst
      (list_fold locs as p1.loc1
         on (share [ yao, Q * int : p0 -> P ] (NoParty, MAX_DIST))
         as msuredNbor in
         let p1Shr = share [ yao, Q * int : p1 -> P ] p1
         let d =
           let loc1Shr = share [ yao, int : p1 -> P ] loc1 in
           abs-val-int (loc0Shr - loc1Shr) in
         mux if (d < (snd msuredNbor))
         then (p1Shr, d)
         else msuredNbor ) ) )
    locs
