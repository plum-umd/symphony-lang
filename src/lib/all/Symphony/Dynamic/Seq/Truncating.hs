module Symphony.Dynamic.Seq.Truncating where

import UVMHS

import Symphony.Lang.Syntax

trNat โท โ โ โ โ โ
trNat m n = n รท (2 ^^ m)

trPrNat โท IPrecision โ โ โ โ
trPrNat = \case
  InfIPr โ id
  FixedIPr m n โ trNat $ m + n

buNat โท โ โ โ โ โ
buNat m n = n + (2 ^^ m)

buPrNat โท IPrecision โ โ โ โ
buPrNat = \case
  InfIPr โ id
  FixedIPr m n โ buNat $ m + n

trInt โท โ โ โค โ โค
trInt m i
  | i < neg (int (2 ^^ (m - 1))) = trInt m (i + int (2 ^^ m))
  | i > int (2 ^^ (m - 1) - 1) = trInt m (i - int (2 ^^ m))
  | otherwise = i

trPrInt โท IPrecision โ โค โ โค
trPrInt = \case
  InfIPr โ id
  FixedIPr m n โ trInt $ m + n

trPrFlt โท FPrecision โ ๐ป โ ๐ป
trPrFlt _pr = id -- TODO
