module PSL.Interpreter.Primitives where

import UVMHS

import PSL.Interpreter.Types
import PSL.Interpreter.Truncating
import PSL.Interpreter.Pretty ()
import PSL.Syntax
import PSL.Interpreter.Json ()
import PSL.Interpreter.Error

import AddToUVMHS

primType ‚à∑ (STACK) ‚áí Op ‚Üí ùêø Type ‚Üí IM Type
primType op œÑs = case (op, tohs œÑs) of
  (OrO, [ùîπT, ùîπT]) ‚Üí return ùîπT
  (PlusO, [‚ÑïT pr‚ÇÅ, ‚ÑïT pr‚ÇÇ]) | pr‚ÇÅ ‚â° pr‚ÇÇ ‚Üí return $ ‚ÑïT pr‚ÇÅ
  (PlusO, [‚Ñ§T pr‚ÇÅ, ‚Ñ§T pr‚ÇÇ]) | pr‚ÇÅ ‚â° pr‚ÇÇ ‚Üí return $ ‚Ñ§T pr‚ÇÅ
  (ExpO, [ùîΩT pr‚ÇÅ, ùîΩT pr‚ÇÇ]) | pr‚ÇÅ ‚â° pr‚ÇÇ ‚Üí return $ ùîΩT pr‚ÇÅ
  (CondO, [ùîπT, ‚Ñ§T pr‚ÇÅ, ‚Ñ§T pr‚ÇÇ]) | pr‚ÇÅ ‚â° pr‚ÇÇ ‚Üí return $ ‚Ñ§T pr‚ÇÅ
  _ ‚Üí throwIErrorCxt NotImplementedIError "primType" $ frhs
    [ ("op", pretty op)
    , ("œÑs", pretty œÑs)
    ]

interpPrim ‚à∑ (STACK) ‚áí Op ‚Üí ùêø BaseVal ‚Üí IM BaseVal
interpPrim o vs = case (o,tohs vs) of
  (OrO     ,[BoolBV b‚ÇÅ, BoolBV b‚ÇÇ])                   ‚Üí return $ BoolBV    $ b‚ÇÅ ‚©î b‚ÇÇ
  (PlusO   ,[NatBV pr‚ÇÅ n‚ÇÅ, NatBV pr‚ÇÇ n‚ÇÇ]) | pr‚ÇÅ ‚â° pr‚ÇÇ ‚Üí return $ NatBV pr‚ÇÅ $ trPrNat pr‚ÇÅ $ n‚ÇÅ + n‚ÇÇ
  (PlusO   ,[IntBV pr‚ÇÅ i‚ÇÅ, IntBV pr‚ÇÇ i‚ÇÇ]) | pr‚ÇÅ ‚â° pr‚ÇÇ ‚Üí return $ IntBV pr‚ÇÅ $ trPrInt pr‚ÇÅ $ i‚ÇÅ + i‚ÇÇ
  (ExpO    ,[FltBV pr‚ÇÅ f‚ÇÅ, FltBV pr‚ÇÇ f‚ÇÇ]) | pr‚ÇÅ ‚â° pr‚ÇÇ ‚Üí return $ FltBV pr‚ÇÅ $ f‚ÇÅ ^ f‚ÇÇ
  (AndO    ,[BoolBV b‚ÇÅ  ,BoolBV b‚ÇÇ  ])                ‚Üí return $ BoolBV   $ b‚ÇÅ ‚©ì b‚ÇÇ
  (NotO    ,[BoolBV b])                              ‚Üí return $ BoolBV   $ not b
  (PlusO   ,[BoolBV b‚ÇÅ  ,BoolBV b‚ÇÇ  ])                ‚Üí return $ BoolBV   $ b‚ÇÅ ‚©î b‚ÇÇ
  (PlusO   ,[NatBV p‚ÇÅ n‚ÇÅ,NatBV p‚ÇÇ n‚ÇÇ])          |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ NatBV p‚ÇÅ $ trPrNat p‚ÇÅ $ n‚ÇÅ + n‚ÇÇ
  (PlusO   ,[IntBV p‚ÇÅ i‚ÇÅ,IntBV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ IntBV p‚ÇÅ $ trPrInt p‚ÇÅ $ i‚ÇÅ + i‚ÇÇ
  (PlusO   ,[FltBV p‚ÇÅ f‚ÇÅ,FltBV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ FltBV p‚ÇÅ $ f‚ÇÅ + f‚ÇÇ
  (PlusO   ,[PrinBV (ValPEV œÅv‚ÇÅ)  ,PrinBV (ValPEV œÅv‚ÇÇ)  ])               ‚Üí case (AddBTD œÅv‚ÇÅ) ‚äî (AddBTD œÅv‚ÇÇ) of
                                                                                    BotBTD ‚Üí impossible
                                                                                    AddBTD œÅv ‚Üí return $ PrinBV $ ValPEV œÅv
                                                                                    TopBTD ‚Üí return $ BulBV
  (MinusO  ,[NatBV p‚ÇÅ n‚ÇÅ,NatBV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ NatBV p‚ÇÅ $ trPrNat p‚ÇÅ $ buPrNat p‚ÇÅ n‚ÇÅ - n‚ÇÇ
  (MinusO  ,[IntBV p‚ÇÅ i‚ÇÅ,IntBV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ IntBV p‚ÇÅ $ trPrInt p‚ÇÅ $ i‚ÇÅ - i‚ÇÇ
  (MinusO  ,[FltBV p‚ÇÅ f‚ÇÅ,FltBV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ FltBV p‚ÇÅ $ f‚ÇÅ - f‚ÇÇ
  (TimesO  ,[NatBV p‚ÇÅ n‚ÇÅ,NatBV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ NatBV p‚ÇÅ $ trPrNat p‚ÇÅ $ n‚ÇÅ √ó n‚ÇÇ
  (TimesO  ,[IntBV p‚ÇÅ i‚ÇÅ,IntBV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ IntBV p‚ÇÅ $ trPrInt p‚ÇÅ $ i‚ÇÅ √ó i‚ÇÇ
  (TimesO  ,[FltBV p‚ÇÅ f‚ÇÅ,FltBV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ FltBV p‚ÇÅ $ f‚ÇÅ √ó f‚ÇÇ
  (ExpO    ,[NatBV p‚ÇÅ n‚ÇÅ,NatBV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ NatBV p‚ÇÅ $ trPrNat p‚ÇÅ $ n‚ÇÅ ^^ n‚ÇÇ
  (ExpO    ,[IntBV p‚ÇÅ i‚ÇÅ,NatBV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ IntBV p‚ÇÅ $ trPrInt p‚ÇÅ $ i‚ÇÅ ^^ n‚ÇÇ
  (ExpO    ,[FltBV p‚ÇÅ f‚ÇÅ,FltBV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ FltBV p‚ÇÅ $ f‚ÇÅ ^ f‚ÇÇ
  (DivO    ,[NatBV p‚ÇÅ n‚ÇÅ,NatBV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ NatBV p‚ÇÅ $ trPrNat p‚ÇÅ $ if n‚ÇÇ ‚â° 0     then n‚ÇÅ else n‚ÇÅ ‚åø n‚ÇÇ
  (DivO    ,[IntBV p‚ÇÅ i‚ÇÅ,IntBV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ IntBV p‚ÇÅ $ trPrInt p‚ÇÅ $ if i‚ÇÇ ‚â° int 0 then i‚ÇÅ else i‚ÇÅ ‚åø i‚ÇÇ
  (DivO    ,[FltBV p‚ÇÅ f‚ÇÅ,FltBV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ FltBV p‚ÇÅ $              if f‚ÇÇ ‚â° 0.0   then f‚ÇÅ else f‚ÇÅ / f‚ÇÇ
  (ModO    ,[NatBV p‚ÇÅ n‚ÇÅ,NatBV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ NatBV p‚ÇÅ $ trPrNat p‚ÇÅ $ if n‚ÇÇ ‚â° 0     then n‚ÇÅ else n‚ÇÅ √∑ n‚ÇÇ
  (ModO    ,[IntBV p‚ÇÅ i‚ÇÅ,IntBV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ IntBV p‚ÇÅ $ trPrInt p‚ÇÅ $ if i‚ÇÇ ‚â° int 0 then i‚ÇÅ else i‚ÇÅ √∑ i‚ÇÇ
  (EqO     ,[BoolBV b‚ÇÅ  ,BoolBV b‚ÇÇ  ])               ‚Üí return $ BoolBV   $ b‚ÇÅ ‚â° b‚ÇÇ
  (EqO     ,[NatBV p‚ÇÅ n‚ÇÅ,NatBV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ BoolBV   $ n‚ÇÅ ‚â° n‚ÇÇ
  (EqO     ,[IntBV p‚ÇÅ i‚ÇÅ,IntBV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ BoolBV   $ i‚ÇÅ ‚â° i‚ÇÇ
  (EqO     ,[FltBV p‚ÇÅ f‚ÇÅ,FltBV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ BoolBV   $ f‚ÇÅ ‚â° f‚ÇÇ
  (EqO     ,[PrinBV œÅev‚ÇÅ,PrinBV œÅev‚ÇÇ])               ‚Üí return $ BoolBV   $ œÅev‚ÇÅ ‚â° œÅev‚ÇÇ
  (LTO     ,[NatBV p‚ÇÅ n‚ÇÅ,NatBV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ BoolBV   $ n‚ÇÅ < n‚ÇÇ
  (LTO     ,[IntBV p‚ÇÅ i‚ÇÅ,IntBV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ BoolBV   $ i‚ÇÅ < i‚ÇÇ
  (LTO     ,[FltBV p‚ÇÅ f‚ÇÅ,FltBV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ BoolBV   $ f‚ÇÅ < f‚ÇÇ
  (GTO     ,[NatBV p‚ÇÅ n‚ÇÅ,NatBV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ BoolBV   $ n‚ÇÅ > n‚ÇÇ
  (GTO     ,[IntBV p‚ÇÅ i‚ÇÅ,IntBV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ BoolBV   $ i‚ÇÅ > i‚ÇÇ
  (GTO     ,[FltBV p‚ÇÅ f‚ÇÅ,FltBV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ BoolBV   $ f‚ÇÅ > f‚ÇÇ
  (LTEO    ,[NatBV p‚ÇÅ n‚ÇÅ,NatBV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ BoolBV   $ n‚ÇÅ ‚â§ n‚ÇÇ
  (LTEO    ,[IntBV p‚ÇÅ i‚ÇÅ,IntBV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ BoolBV   $ i‚ÇÅ ‚â§ i‚ÇÇ
  (LTEO    ,[FltBV p‚ÇÅ f‚ÇÅ,FltBV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ BoolBV   $ f‚ÇÅ ‚â§ f‚ÇÇ
  (GTEO    ,[NatBV p‚ÇÅ n‚ÇÅ,NatBV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ BoolBV   $ n‚ÇÅ ‚â• n‚ÇÇ
  (GTEO    ,[IntBV p‚ÇÅ i‚ÇÅ,IntBV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ BoolBV   $ i‚ÇÅ ‚â• i‚ÇÇ
  (GTEO    ,[FltBV p‚ÇÅ f‚ÇÅ,FltBV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ BoolBV   $ f‚ÇÅ ‚â• f‚ÇÇ
  (CondO   ,[BoolBV b,BoolBV b‚ÇÅ  ,BoolBV b‚ÇÇ  ])      ‚Üí return $ BoolBV   $ if b then b‚ÇÅ else b‚ÇÇ
  (CondO   ,[BoolBV b,NatBV p‚ÇÅ n‚ÇÅ,NatBV p‚ÇÇ n‚ÇÇ])|p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ NatBV p‚ÇÅ $ if b then n‚ÇÅ else n‚ÇÇ
  (CondO   ,[BoolBV b,IntBV p‚ÇÅ i‚ÇÅ,IntBV p‚ÇÇ i‚ÇÇ])|p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ IntBV p‚ÇÅ $ if b then i‚ÇÅ else i‚ÇÇ
  (CondO   ,[BoolBV b,FltBV p‚ÇÅ f‚ÇÅ,FltBV p‚ÇÇ f‚ÇÇ])|p‚ÇÅ‚â°p‚ÇÇ‚Üí return $ FltBV p‚ÇÅ $ if b then f‚ÇÅ else f‚ÇÇ
  (CondO   ,[BoolBV b,PrinBV p‚ÇÅ  ,PrinBV p‚ÇÇ  ])      ‚Üí return $ PrinBV   $ if b then p‚ÇÅ else p‚ÇÇ
  (AbsO    ,[IntBV p i])                             ‚Üí return $ NatBV p  $ zabs i
  (LogO    ,[FltBV p f])                             ‚Üí return $ FltBV p  $ logBase 2.0 f
  (SqrtO   ,[FltBV p f])                             ‚Üí return $ FltBV p  $ root f
  (NatO p‚ÇÅ ,[NatBV _ n])                            ‚Üí return $ NatBV p‚ÇÅ $ trPrNat p‚ÇÅ n
  (NatO p‚ÇÅ ,[IntBV _ i])                            ‚Üí return $ NatBV p‚ÇÅ $ trPrNat p‚ÇÅ $ natŒ© i
  (IntO p‚ÇÅ ,[IntBV _ i])                            ‚Üí return $ IntBV p‚ÇÅ $ trPrInt p‚ÇÅ i
  (IntO p‚ÇÅ ,[NatBV _ n])                            ‚Üí return $ IntBV p‚ÇÅ $ trPrInt p‚ÇÅ $ int n
  (FltO p‚ÇÅ ,[NatBV _ n])                            ‚Üí return $ FltBV p‚ÇÅ $ dbl n
  (FltO p‚ÇÅ ,[IntBV _ i])                            ‚Üí return $ FltBV p‚ÇÅ $ dbl i
  (FltO p‚ÇÅ ,[FltBV _ d])                            ‚Üí return $ FltBV p‚ÇÅ $ d
  (CeilO p‚ÇÅ,[FltBV _ f])                            ‚Üí return $ IntBV p‚ÇÅ $ ceiling f
  _ ‚Üí throwIErrorCxt NotImplementedIError "interpPrim" $ frhs
    [ ("o",pretty o)
    , ("vs",pretty vs)
    ]
