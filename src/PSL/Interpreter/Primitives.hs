module PSL.Interpreter.Primitives where

import UVMHS

import PSL.Interpreter.Types
import PSL.Interpreter.Truncating
import PSL.Interpreter.Pretty ()
import PSL.Syntax

valWithType ‚à∑ Val ‚Üí Val ‚àß ùïä
valWithType v = v :* getType v

multDepth ‚à∑ Prot ‚Üí ùïä ‚Üí ‚Ñï
multDepth p o = case (p, o) of
  (_, "TIMES") ‚Üí 1
  _ ‚Üí 0 -- To be updated

interpPrim ‚à∑ (STACK) ‚áí ùïä ‚Üí ùêø Val ‚Üí IM (Val ‚àß ùïä)
interpPrim o vs = case (o,vs) of
  ("OR"      ,tohs ‚Üí [BoolV b‚ÇÅ  ,BoolV b‚ÇÇ  ])           ‚Üí return $ valWithType (BoolV   $ b‚ÇÅ ‚©î b‚ÇÇ)
  ("AND"     ,tohs ‚Üí [BoolV b‚ÇÅ  ,BoolV b‚ÇÇ  ])           ‚Üí return $ valWithType (BoolV   $ b‚ÇÅ ‚©ì b‚ÇÇ)
  ("NOT"     ,tohs ‚Üí [BoolV b])                         ‚Üí return $ valWithType (BoolV   $ not b  )
  ("PLUS"    ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (NatV p‚ÇÅ $ trPrNat p‚ÇÅ $ n‚ÇÅ + n‚ÇÇ)
  ("PLUS"    ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (IntV p‚ÇÅ $ trPrInt p‚ÇÅ $ i‚ÇÅ + i‚ÇÇ)
  ("PLUS"    ,tohs ‚Üí [FltV p‚ÇÅ f‚ÇÅ,FltV p‚ÇÇ f‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (FltV p‚ÇÅ $ f‚ÇÅ + f‚ÇÇ)
  ("MINUS"   ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (NatV p‚ÇÅ $ trPrNat p‚ÇÅ $ buPrNat p‚ÇÅ n‚ÇÅ - n‚ÇÇ)
  ("MINUS"   ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (IntV p‚ÇÅ $ trPrInt p‚ÇÅ $ i‚ÇÅ - i‚ÇÇ)
  ("MINUS"   ,tohs ‚Üí [FltV p‚ÇÅ f‚ÇÅ,FltV p‚ÇÇ f‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (FltV p‚ÇÅ $ f‚ÇÅ - f‚ÇÇ)
  ("TIMES"   ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (NatV p‚ÇÅ $ trPrNat p‚ÇÅ $ n‚ÇÅ √ó n‚ÇÇ)
  ("TIMES"   ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (IntV p‚ÇÅ $ trPrInt p‚ÇÅ $ i‚ÇÅ √ó i‚ÇÇ)
  ("TIMES"   ,tohs ‚Üí [FltV p‚ÇÅ f‚ÇÅ,FltV p‚ÇÇ f‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (FltV p‚ÇÅ $ f‚ÇÅ √ó f‚ÇÇ)
  ("EXP"     ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (NatV p‚ÇÅ $ trPrNat p‚ÇÅ $ n‚ÇÅ ^^ n‚ÇÇ)
  ("EXP"     ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (IntV p‚ÇÅ $ trPrInt p‚ÇÅ $ i‚ÇÅ ^^ n‚ÇÇ)
  ("EXP"     ,tohs ‚Üí [FltV p‚ÇÅ f‚ÇÅ,FltV p‚ÇÇ f‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (FltV p‚ÇÅ $ f‚ÇÅ ^ f‚ÇÇ)
  ("DIV"     ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (NatV p‚ÇÅ $ trPrNat p‚ÇÅ $ if n‚ÇÇ ‚â° 0     then n‚ÇÅ else n‚ÇÅ ‚åø n‚ÇÇ)
  ("DIV"     ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (IntV p‚ÇÅ $ trPrInt p‚ÇÅ $ if i‚ÇÇ ‚â° int 0 then i‚ÇÅ else i‚ÇÅ ‚åø i‚ÇÇ)
  ("DIV"     ,tohs ‚Üí [FltV p‚ÇÅ f‚ÇÅ,FltV p‚ÇÇ f‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (FltV p‚ÇÅ $              if f‚ÇÇ ‚â° 0.0   then f‚ÇÅ else f‚ÇÅ ‚åø f‚ÇÇ)
  ("MOD"     ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (NatV p‚ÇÅ $ trPrNat p‚ÇÅ $ if n‚ÇÇ ‚â° 0     then n‚ÇÅ else n‚ÇÅ √∑ n‚ÇÇ)
  ("MOD"     ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (IntV p‚ÇÅ $ trPrInt p‚ÇÅ $ if i‚ÇÇ ‚â° int 0 then i‚ÇÅ else i‚ÇÅ √∑ i‚ÇÇ)
  ("MOD"     ,tohs ‚Üí [FltV p‚ÇÅ f‚ÇÅ,FltV p‚ÇÇ f‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (FltV p‚ÇÅ $              if f‚ÇÇ ‚â° 0.0   then f‚ÇÅ else f‚ÇÅ √∑ f‚ÇÇ)
  ("EQ"      ,tohs ‚Üí [BoolV b‚ÇÅ  ,BoolV b‚ÇÇ  ])           ‚Üí return $ valWithType (BoolV   $ b‚ÇÅ ‚â° b‚ÇÇ)
  ("EQ"      ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (BoolV   $ n‚ÇÅ ‚â° n‚ÇÇ)
  ("EQ"      ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (BoolV   $ i‚ÇÅ ‚â° i‚ÇÇ)
  ("EQ"      ,tohs ‚Üí [FltV p‚ÇÅ f‚ÇÅ,FltV p‚ÇÇ f‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (BoolV   $ f‚ÇÅ ‚â° f‚ÇÇ)
  ("EQ"      ,tohs ‚Üí [PrinV œÅev‚ÇÅ,PrinV œÅev‚ÇÇ])           ‚Üí return $ valWithType (BoolV   $ œÅev‚ÇÅ ‚â° œÅev‚ÇÇ)
  ("LT"      ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (BoolV   $ n‚ÇÅ < n‚ÇÇ)
  ("LT"      ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (BoolV   $ i‚ÇÅ < i‚ÇÇ)
  ("LT"      ,tohs ‚Üí [FltV p‚ÇÅ f‚ÇÅ,FltV p‚ÇÇ f‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (BoolV   $ f‚ÇÅ < f‚ÇÇ)
  ("GT"      ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (BoolV   $ n‚ÇÅ > n‚ÇÇ)
  ("GT"      ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (BoolV   $ i‚ÇÅ > i‚ÇÇ)
  ("GT"      ,tohs ‚Üí [FltV p‚ÇÅ f‚ÇÅ,FltV p‚ÇÇ f‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (BoolV   $ f‚ÇÅ > f‚ÇÇ)
  ("LTE"     ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (BoolV   $ n‚ÇÅ ‚â§ n‚ÇÇ)
  ("LTE"     ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (BoolV   $ i‚ÇÅ ‚â§ i‚ÇÇ)
  ("LTE"     ,tohs ‚Üí [FltV p‚ÇÅ f‚ÇÅ,FltV p‚ÇÇ f‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (BoolV   $ f‚ÇÅ ‚â§ f‚ÇÇ)
  ("GTE"     ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (BoolV   $ n‚ÇÅ ‚â• n‚ÇÇ)
  ("GTE"     ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (BoolV   $ i‚ÇÅ ‚â• i‚ÇÇ)
  ("GTE"     ,tohs ‚Üí [FltV p‚ÇÅ f‚ÇÅ,FltV p‚ÇÇ f‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (BoolV   $ f‚ÇÅ ‚â• f‚ÇÇ)
  ("COND"    ,tohs ‚Üí [BoolV b   ,BoolV b‚ÇÅ  ,BoolV b‚ÇÇ  ])           ‚Üí return $ valWithType (BoolV    $ if b then b‚ÇÅ else b‚ÇÇ)
  ("COND"    ,tohs ‚Üí [BoolV b   ,NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (NatV p‚ÇÅ  $ if b then n‚ÇÅ else n‚ÇÇ)
  ("COND"    ,tohs ‚Üí [BoolV b   ,IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (IntV p‚ÇÅ  $ if b then i‚ÇÅ else i‚ÇÇ)
  ("COND"    ,tohs ‚Üí [BoolV b   ,FltV p‚ÇÅ f‚ÇÅ,FltV p‚ÇÇ f‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ valWithType (FltV p‚ÇÅ  $ if b then f‚ÇÅ else f‚ÇÇ)
  ("COND"    ,tohs ‚Üí [BoolV b   ,PrinV p‚ÇÅ  ,PrinV p‚ÇÇ  ])           ‚Üí return $ valWithType (PrinV    $ if b then p‚ÇÅ else p‚ÇÇ)
  ("COND"    ,tohs ‚Üí [BoolV b   ,PrinSetV ps‚ÇÅ,PrinV p‚ÇÇ]) | psize ps‚ÇÅ ‚â° 1 ‚Üí let Some (p‚ÇÅ :* _) = unconsùëÜ $ streamùëÉ ps‚ÇÅ in return $ valWithType (PrinV $ if b then ValPEV p‚ÇÅ else p‚ÇÇ)
  ("COND"    ,tohs ‚Üí [BoolV b   ,PrinV p‚ÇÅ,PrinSetV ps‚ÇÇ]) | psize ps‚ÇÇ ‚â° 1 ‚Üí let Some (p‚ÇÇ :* _) = unconsùëÜ $ streamùëÉ ps‚ÇÇ in return $ valWithType (PrinV $ if b then p‚ÇÅ else ValPEV p‚ÇÇ)
  ("TO_FLT"  ,tohs ‚Üí [NatV p n])                        ‚Üí return $ valWithType (FltV (fPrecFrIPrec p) $ dbl n)
  ("TO_FLT"  ,tohs ‚Üí [IntV p n])                        ‚Üí return $ valWithType (FltV (fPrecFrIPrec p) $ dbl n)
  ("ABS_VAL" ,tohs ‚Üí [NatV p n])                        ‚Üí return $ valWithType (NatV p n)
  ("ABS_VAL" ,tohs ‚Üí [IntV p i])                        ‚Üí return $ valWithType (NatV p  $ zabs i)
  ("CEIL"    ,tohs ‚Üí [FltV p f])                        ‚Üí return $ valWithType (IntV (iPrecFrFPrec p) $ ceiling f)
  ("SQRT"    ,tohs ‚Üí [FltV p f])                        ‚Üí return $ valWithType (FltV p  $ root f)
  _ ‚Üí throwIErrorCxt NotImplementedIError "interpPrim" $ frhs
    [ ("o",pretty o)
    , ("vs",pretty vs)
    ]
