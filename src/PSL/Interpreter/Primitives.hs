module PSL.Interpreter.Primitives where

import UVMHS

import PSL.Interpreter.Types
import PSL.Interpreter.Truncating
import PSL.Syntax

interpPrim ‚à∑ (STACK) ‚áí ùïä ‚Üí ùêø Val ‚Üí IM Val
interpPrim o vs = case (o,vs) of
  ("OR"      ,tohs ‚Üí [BoolV b‚ÇÅ  ,BoolV b‚ÇÇ  ])           ‚Üí return $ BoolV   $ b‚ÇÅ ‚©î b‚ÇÇ
  ("AND"     ,tohs ‚Üí [BoolV b‚ÇÅ  ,BoolV b‚ÇÇ  ])           ‚Üí return $ BoolV   $ b‚ÇÅ ‚©ì b‚ÇÇ
  ("PLUS"    ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ NatV p‚ÇÅ $ trPrNat p‚ÇÅ $ n‚ÇÅ + n‚ÇÇ
  ("PLUS"    ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ IntV p‚ÇÅ $ trPrInt p‚ÇÅ $ i‚ÇÅ + i‚ÇÇ
  ("MINUS"   ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ NatV p‚ÇÅ $ trPrNat p‚ÇÅ $ buPrNat p‚ÇÅ n‚ÇÅ - n‚ÇÇ
  ("MINUS"   ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ IntV p‚ÇÅ $ trPrInt p‚ÇÅ $ i‚ÇÅ - i‚ÇÇ
  ("TIMES"   ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ NatV p‚ÇÅ $ trPrNat p‚ÇÅ $ n‚ÇÅ √ó n‚ÇÇ
  ("TIMES"   ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ IntV p‚ÇÅ $ trPrInt p‚ÇÅ $ i‚ÇÅ √ó i‚ÇÇ
  ("DIV"     ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ NatV p‚ÇÅ $ trPrNat p‚ÇÅ $ if n‚ÇÇ ‚â° 0     then n‚ÇÅ else n‚ÇÅ ‚åø n‚ÇÇ
  ("DIV"     ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ IntV p‚ÇÅ $ trPrInt p‚ÇÅ $ if i‚ÇÇ ‚â° int 0 then i‚ÇÅ else i‚ÇÅ ‚åø i‚ÇÇ
  ("MOD"     ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ NatV p‚ÇÅ $ trPrNat p‚ÇÅ $ if n‚ÇÇ ‚â° 0     then n‚ÇÅ else n‚ÇÅ √∑ n‚ÇÇ
  ("MOD"     ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ IntV p‚ÇÅ $ trPrInt p‚ÇÅ $ if i‚ÇÇ ‚â° int 0 then i‚ÇÅ else i‚ÇÅ √∑ i‚ÇÇ
  ("EQ"      ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ BoolV   $ n‚ÇÅ ‚â° n‚ÇÇ
  ("EQ"      ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ BoolV   $ i‚ÇÅ ‚â° i‚ÇÇ
  ("LT"      ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ BoolV   $ n‚ÇÅ < n‚ÇÇ
  ("LT"      ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ BoolV   $ i‚ÇÅ < i‚ÇÇ
  ("GT"      ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ BoolV   $ n‚ÇÅ > n‚ÇÇ
  ("GT"      ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ BoolV   $ i‚ÇÅ > i‚ÇÇ
  ("LTE"     ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ BoolV   $ n‚ÇÅ ‚â§ n‚ÇÇ
  ("LTE"     ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ BoolV   $ i‚ÇÅ ‚â§ i‚ÇÇ
  ("GTE"     ,tohs ‚Üí [NatV p‚ÇÅ n‚ÇÅ,NatV p‚ÇÇ n‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ BoolV   $ n‚ÇÅ ‚â• n‚ÇÇ
  ("GTE"     ,tohs ‚Üí [IntV p‚ÇÅ i‚ÇÅ,IntV p‚ÇÇ i‚ÇÇ]) | p‚ÇÅ ‚â° p‚ÇÇ ‚Üí return $ BoolV   $ i‚ÇÅ ‚â• i‚ÇÇ
  ("COND"    ,tohs ‚Üí [BoolV b   ,v‚ÇÅ,v‚ÇÇ     ])           ‚Üí return           $ if b then v‚ÇÅ else v‚ÇÇ
  ("TO_FLT"  ,tohs ‚Üí [IntV (FixedIPr prw prd) n])       ‚Üí return $ FltV (FixedFPr (prw + prd)) $ dbl n
  ("TO_FLT"  ,tohs ‚Üí [NatV (FixedIPr prw prd) n])       ‚Üí return $ FltV (FixedFPr (prw + prd)) $ dbl n
  ("ABS_VAL" ,tohs ‚Üí [IntV p i])                        ‚Üí return $ NatV p  $ zabs i
  ("ABS_VAL" ,tohs ‚Üí [NatV p n])                        ‚Üí return $ NatV p n
  ("CEIL"    ,tohs ‚Üí [FltV (FixedFPr pr) f])            ‚Üí return $ IntV (FixedIPr pr 0) $ ceiling f
  ("SQRT"    ,tohs ‚Üí [FltV p f])                        ‚Üí return $ FltV p  $ root f
  _ ‚Üí throwIErrorCxt NotImplementedIError "interpPrim" $ frhs
    [ ("o",pretty o)
    , ("vs",pretty vs)
    ]

