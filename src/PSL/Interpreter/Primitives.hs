module PSL.Interpreter.Primitives where

import UVMHS

import PSL.Interpreter.Types
import PSL.Interpreter.Truncating
import PSL.Interpreter.Pretty ()
import PSL.Syntax
import PSL.Interpreter.Json

valWithType ‚à∑ Val ‚Üí Val ‚àß ùïä
valWithType v = v :* getType v

tnat ‚à∑ IPrecision ‚Üí ùïä
tnat p = "nat"‚ß∫iprecisionSuffix p

tint ‚à∑ IPrecision ‚Üí ùïä
tint p = "int"‚ß∫iprecisionSuffix p

tflt ‚à∑ FPrecision ‚Üí ùïä
tflt p = "flt"‚ß∫fprecisionSuffix p

tboo ‚à∑ ùïä
tboo = "bool"

tprn ‚à∑ ùïä
tprn = "prin"

interpPrim ‚à∑ (STACK) ‚áí Op ‚Üí ùêø BaseValMPC ‚Üí IM (ùïä ‚àß ùïä ‚àß BaseValMPC)
interpPrim o vs = case (o,tohs vs) of
  (OrO     ,[BoolMV b‚ÇÅ  ,BoolMV b‚ÇÇ  ])               ‚Üír (tboo   ) (null   ) $ BoolMV   $ b‚ÇÅ ‚©î b‚ÇÇ
  (AndO    ,[BoolMV b‚ÇÅ  ,BoolMV b‚ÇÇ  ])               ‚Üír (tboo   ) (null   ) $ BoolMV   $ b‚ÇÅ ‚©ì b‚ÇÇ
  (NotO    ,[BoolMV b])                              ‚Üír (tboo   ) (null   ) $ BoolMV   $ not b  
  (PlusO   ,[NatMV p‚ÇÅ n‚ÇÅ,NatMV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tnat p‚ÇÅ) (null   ) $ NatMV p‚ÇÅ $ trPrNat p‚ÇÅ $ n‚ÇÅ + n‚ÇÇ
  (PlusO   ,[IntMV p‚ÇÅ i‚ÇÅ,IntMV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tint p‚ÇÅ) (null   ) $ IntMV p‚ÇÅ $ trPrInt p‚ÇÅ $ i‚ÇÅ + i‚ÇÇ
  (PlusO   ,[FltMV p‚ÇÅ f‚ÇÅ,FltMV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tflt p‚ÇÅ) (null   ) $ FltMV p‚ÇÅ $ f‚ÇÅ + f‚ÇÇ
  (MinusO  ,[NatMV p‚ÇÅ n‚ÇÅ,NatMV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tnat p‚ÇÅ) (null   ) $ NatMV p‚ÇÅ $ trPrNat p‚ÇÅ $ buPrNat p‚ÇÅ n‚ÇÅ - n‚ÇÇ
  (MinusO  ,[IntMV p‚ÇÅ i‚ÇÅ,IntMV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tint p‚ÇÅ) (null   ) $ IntMV p‚ÇÅ $ trPrInt p‚ÇÅ $ i‚ÇÅ - i‚ÇÇ
  (MinusO  ,[FltMV p‚ÇÅ f‚ÇÅ,FltMV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tflt p‚ÇÅ) (null   ) $ FltMV p‚ÇÅ $ f‚ÇÅ - f‚ÇÇ
  (TimesO  ,[NatMV p‚ÇÅ n‚ÇÅ,NatMV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tnat p‚ÇÅ) (null   ) $ NatMV p‚ÇÅ $ trPrNat p‚ÇÅ $ n‚ÇÅ √ó n‚ÇÇ
  (TimesO  ,[IntMV p‚ÇÅ i‚ÇÅ,IntMV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tint p‚ÇÅ) (null   ) $ IntMV p‚ÇÅ $ trPrInt p‚ÇÅ $ i‚ÇÅ √ó i‚ÇÇ
  (TimesO  ,[FltMV p‚ÇÅ f‚ÇÅ,FltMV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tflt p‚ÇÅ) (null   ) $ FltMV p‚ÇÅ $ f‚ÇÅ √ó f‚ÇÇ
  (ExpO    ,[NatMV p‚ÇÅ n‚ÇÅ,NatMV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tnat p‚ÇÅ) (null   ) $ NatMV p‚ÇÅ $ trPrNat p‚ÇÅ $ n‚ÇÅ ^^ n‚ÇÇ
  (ExpO    ,[IntMV p‚ÇÅ i‚ÇÅ,NatMV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tint p‚ÇÅ) (null   ) $ IntMV p‚ÇÅ $ trPrInt p‚ÇÅ $ i‚ÇÅ ^^ n‚ÇÇ
  (ExpO    ,[FltMV p‚ÇÅ f‚ÇÅ,FltMV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tflt p‚ÇÅ) (null   ) $ FltMV p‚ÇÅ $ f‚ÇÅ ^ f‚ÇÇ
  (DivO    ,[NatMV p‚ÇÅ n‚ÇÅ,NatMV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tnat p‚ÇÅ) (null   ) $ NatMV p‚ÇÅ $ trPrNat p‚ÇÅ $ if n‚ÇÇ ‚â° 0     then n‚ÇÅ else n‚ÇÅ ‚åø n‚ÇÇ
  (DivO    ,[IntMV p‚ÇÅ i‚ÇÅ,IntMV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tint p‚ÇÅ) (null   ) $ IntMV p‚ÇÅ $ trPrInt p‚ÇÅ $ if i‚ÇÇ ‚â° int 0 then i‚ÇÅ else i‚ÇÅ ‚åø i‚ÇÇ
  (DivO    ,[FltMV p‚ÇÅ f‚ÇÅ,FltMV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tflt p‚ÇÅ) (null   ) $ FltMV p‚ÇÅ $              if f‚ÇÇ ‚â° 0.0   then f‚ÇÅ else f‚ÇÅ / f‚ÇÇ
  (ModO    ,[NatMV p‚ÇÅ n‚ÇÅ,NatMV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tnat p‚ÇÅ) (null   ) $ NatMV p‚ÇÅ $ trPrNat p‚ÇÅ $ if n‚ÇÇ ‚â° 0     then n‚ÇÅ else n‚ÇÅ √∑ n‚ÇÇ
  (ModO    ,[IntMV p‚ÇÅ i‚ÇÅ,IntMV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tint p‚ÇÅ) (null   ) $ IntMV p‚ÇÅ $ trPrInt p‚ÇÅ $ if i‚ÇÇ ‚â° int 0 then i‚ÇÅ else i‚ÇÅ √∑ i‚ÇÇ
  (EqO     ,[BoolMV b‚ÇÅ  ,BoolMV b‚ÇÇ  ])               ‚Üír (tboo   ) (null   ) $ BoolMV   $ b‚ÇÅ ‚â° b‚ÇÇ
  (EqO     ,[NatMV p‚ÇÅ n‚ÇÅ,NatMV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tnat p‚ÇÅ) (null   ) $ BoolMV   $ n‚ÇÅ ‚â° n‚ÇÇ
  (EqO     ,[IntMV p‚ÇÅ i‚ÇÅ,IntMV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tint p‚ÇÅ) (null   ) $ BoolMV   $ i‚ÇÅ ‚â° i‚ÇÇ
  (EqO     ,[FltMV p‚ÇÅ f‚ÇÅ,FltMV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tflt p‚ÇÅ) (null   ) $ BoolMV   $ f‚ÇÅ ‚â° f‚ÇÇ
  (EqO     ,[PrinMV œÅev‚ÇÅ,PrinMV œÅev‚ÇÇ])               ‚Üír (tprn   ) (null   ) $ BoolMV   $ œÅev‚ÇÅ ‚â° œÅev‚ÇÇ
  (LTO     ,[NatMV p‚ÇÅ n‚ÇÅ,NatMV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tnat p‚ÇÅ) (null   ) $ BoolMV   $ n‚ÇÅ < n‚ÇÇ
  (LTO     ,[IntMV p‚ÇÅ i‚ÇÅ,IntMV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tint p‚ÇÅ) (null   ) $ BoolMV   $ i‚ÇÅ < i‚ÇÇ
  (LTO     ,[FltMV p‚ÇÅ f‚ÇÅ,FltMV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tflt p‚ÇÅ) (null   ) $ BoolMV   $ f‚ÇÅ < f‚ÇÇ
  (GTO     ,[NatMV p‚ÇÅ n‚ÇÅ,NatMV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tnat p‚ÇÅ) (null   ) $ BoolMV   $ n‚ÇÅ > n‚ÇÇ
  (GTO     ,[IntMV p‚ÇÅ i‚ÇÅ,IntMV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tint p‚ÇÅ) (null   ) $ BoolMV   $ i‚ÇÅ > i‚ÇÇ
  (GTO     ,[FltMV p‚ÇÅ f‚ÇÅ,FltMV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tflt p‚ÇÅ) (null   ) $ BoolMV   $ f‚ÇÅ > f‚ÇÇ
  (LTEO    ,[NatMV p‚ÇÅ n‚ÇÅ,NatMV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tnat p‚ÇÅ) (null   ) $ BoolMV   $ n‚ÇÅ ‚â§ n‚ÇÇ
  (LTEO    ,[IntMV p‚ÇÅ i‚ÇÅ,IntMV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tint p‚ÇÅ) (null   ) $ BoolMV   $ i‚ÇÅ ‚â§ i‚ÇÇ
  (LTEO    ,[FltMV p‚ÇÅ f‚ÇÅ,FltMV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tflt p‚ÇÅ) (null   ) $ BoolMV   $ f‚ÇÅ ‚â§ f‚ÇÇ
  (GTEO    ,[NatMV p‚ÇÅ n‚ÇÅ,NatMV p‚ÇÇ n‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tnat p‚ÇÅ) (null   ) $ BoolMV   $ n‚ÇÅ ‚â• n‚ÇÇ
  (GTEO    ,[IntMV p‚ÇÅ i‚ÇÅ,IntMV p‚ÇÇ i‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tint p‚ÇÅ) (null   ) $ BoolMV   $ i‚ÇÅ ‚â• i‚ÇÇ
  (GTEO    ,[FltMV p‚ÇÅ f‚ÇÅ,FltMV p‚ÇÇ f‚ÇÇ])         |p‚ÇÅ‚â°p‚ÇÇ‚Üír (tflt p‚ÇÅ) (null   ) $ BoolMV   $ f‚ÇÅ ‚â• f‚ÇÇ
  (CondO   ,[BoolMV b,BoolMV b‚ÇÅ  ,BoolMV b‚ÇÇ  ])      ‚Üír (tboo   ) (null   ) $ BoolMV   $ if b then b‚ÇÅ else b‚ÇÇ
  (CondO   ,[BoolMV b,NatMV p‚ÇÅ n‚ÇÅ,NatMV p‚ÇÇ n‚ÇÇ])|p‚ÇÅ‚â°p‚ÇÇ‚Üír (tnat p‚ÇÅ) (null   ) $ NatMV p‚ÇÅ $ if b then n‚ÇÅ else n‚ÇÇ
  (CondO   ,[BoolMV b,IntMV p‚ÇÅ i‚ÇÅ,IntMV p‚ÇÇ i‚ÇÇ])|p‚ÇÅ‚â°p‚ÇÇ‚Üír (tint p‚ÇÅ) (null   ) $ IntMV p‚ÇÅ $ if b then i‚ÇÅ else i‚ÇÇ
  (CondO   ,[BoolMV b,FltMV p‚ÇÅ f‚ÇÅ,FltMV p‚ÇÇ f‚ÇÇ])|p‚ÇÅ‚â°p‚ÇÇ‚Üír (tflt p‚ÇÅ) (null   ) $ FltMV p‚ÇÅ $ if b then f‚ÇÅ else f‚ÇÇ
  (CondO   ,[BoolMV b,PrinMV p‚ÇÅ  ,PrinMV p‚ÇÇ  ])      ‚Üír (tprn   ) (null   ) $ PrinMV   $ if b then p‚ÇÅ else p‚ÇÇ
  (AbsO    ,[IntMV p i])                             ‚Üír (tint p ) (null   ) $ NatMV p  $ zabs i
  (SqrtO   ,[FltMV p f])                             ‚Üír (tflt p ) (null   ) $ FltMV p  $ root f
  (NatO p‚ÇÅ ,[NatMV p‚ÇÇ n])                            ‚Üír (tnat p‚ÇÇ) (tnat p‚ÇÅ) $ NatMV p‚ÇÅ $ trPrNat p‚ÇÅ n
  (NatO p‚ÇÅ ,[IntMV p‚ÇÇ i])                            ‚Üír (tnat p‚ÇÇ) (tint p‚ÇÅ) $ NatMV p‚ÇÅ $ trPrNat p‚ÇÅ $ natŒ© i
  (IntO p‚ÇÅ ,[IntMV p‚ÇÇ i])                            ‚Üír (tint p‚ÇÇ) (tint p‚ÇÅ) $ IntMV p‚ÇÅ $ trPrInt p‚ÇÅ i
  (IntO p‚ÇÅ ,[NatMV p‚ÇÇ n])                            ‚Üír (tnat p‚ÇÇ) (tint p‚ÇÅ) $ IntMV p‚ÇÅ $ trPrInt p‚ÇÅ $ int n
  (FltO p‚ÇÅ ,[NatMV p‚ÇÇ n])                            ‚Üír (tnat p‚ÇÇ) (tflt p‚ÇÅ) $ FltMV p‚ÇÅ $ dbl n
  (FltO p‚ÇÅ ,[IntMV p‚ÇÇ i])                            ‚Üír (tint p‚ÇÇ) (tflt p‚ÇÅ) $ FltMV p‚ÇÅ $ dbl i
  (FltO p‚ÇÅ ,[FltMV p‚ÇÇ d])                            ‚Üír (tflt p‚ÇÇ) (tflt p‚ÇÅ) $ FltMV p‚ÇÅ $ d
  (CeilO p‚ÇÅ,[FltMV p‚ÇÇ f])                            ‚Üír (tflt p‚ÇÇ) (tint p‚ÇÅ) $ IntMV p‚ÇÅ $ ceiling f
  _ ‚Üí throwIErrorCxt NotImplementedIError "interpPrim" $ frhs
    [ ("o",pretty o)
    , ("vs",pretty vs)
    ]
  where
    r s‚ÇÅ s‚ÇÇ v = return $ s‚ÇÅ :* s‚ÇÇ :* v

opName ‚à∑ Op ‚Üí ùïä
opName = \case
  OrO ‚Üí "OR"
  AndO ‚Üí "AND"
  NotO ‚Üí "NOT"
  PlusO ‚Üí "PLUS"
  MinusO ‚Üí "MINUS"
  TimesO ‚Üí "TIMES"
  ExpO ‚Üí "EXP"
  DivO ‚Üí "DIV"
  ModO  ‚Üí "MOD"
  EqO ‚Üí "EQ"
  LTO ‚Üí "LT"
  GTO ‚Üí "GT"
  LTEO ‚Üí "LTE"
  GTEO ‚Üí "GTE"
  CondO ‚Üí "COND"
  AbsO ‚Üí "ABS"
  SqrtO ‚Üí "SQRT"
  NatO _p ‚Üí "TO_NAT" -- change to "NAT" later
  IntO _p ‚Üí "TO_INT" -- change to "INT" later
  FltO _p ‚Üí "TO_FLT" -- change to "FLT" later
  CeilO _p ‚Üí "CEIL"


multDepth ‚à∑ Prot ‚Üí Op ‚Üí ‚Ñï
multDepth p o = case (p, o) of
  (_, TimesO) ‚Üí 1
  (_, GTO) -> 1
  (_, LTO) -> 1
  (_, EqO) -> 1
  (_, GTEO) -> 1
  (_, LTEO) -> 1
  _ ‚Üí 0 -- To be updated

multDepthShareInfo ‚à∑ Op ‚Üí ShareInfo ‚Üí ‚Ñï
multDepthShareInfo op = \case
  NotShared ‚Üí zero
  Shared _ œÜ _ ‚Üí multDepth œÜ op

