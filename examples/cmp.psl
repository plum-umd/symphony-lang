-- input parties
principal A B
-- compute parties
principal C D
-- output party
principal E

def main : 𝟙 →{inp:A,B;rev:E} 𝔹{E}
def main • =
  let xy : ℤ{bundle:A,B}
  let xy = solo {A,B} read ℤ from "cmp-input.txt" 
  let x = share{yao:A → C,D} xy@A
  let y = share{yao:B → C,D} xy@B
  in reveal{E} (x ≤ y)
