-- input parties
principal A B
-- compute parties
principal C D
-- output party
principal E

def main : 𝟙 →{inp:A,B;rev:E} 𝔹{ssec:E}
def main • =
  let xy = {par:A,B} read ℤ "cmp-input.txt"
  reveal{E} (share{yao:C,D} xy.A) ≤ (share{yao:C,D} xy.B)
