-- input parties
principal A B
-- compute parties
principal C D
-- output party
principal E

def main : () -> {inp:A,B;rev:E} bool{E}
def main () =
  let xy = par {A,B} read int "cmp-input.txt"
  :n reveal{E} (share {yao:C,D} xy.A) <= (share{yao:C,D} xy.B)
