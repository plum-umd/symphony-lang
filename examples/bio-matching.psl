principal A B

-- euclidean distance
def dist (a0, a1) (b0, b1) = babylonian-sqrt-int
  ((square (a0 - b0)) + (square (a1 - b1)))

-- omin l: minimum value in non-empty list l
def omin l = elim-list l (head _|_ l) min-muxable

def main () = par{A, B}
  let psA = map (fun x -> share {yao: A -> A, B} x) 
      (send-ls {A} {A, B}
       (par {A} (read (list (int * int)) from "biomatching-input.txt"))) in
  let pB = share {yao: B -> A, B}
    (par {B} (read (int * int) from "biomatching-input.txt")) in
  reveal {A, B} (omin (map (dist pB) psA))
