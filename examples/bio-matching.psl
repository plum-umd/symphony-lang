principal A B

def dist a b = abs-val-int (a - b)

-- omin l: minimum value in non-empty list l
def omin l = elim-list l (head _|_ l) min-muxable

def main () = par{A, B}
  let psA = map (fun x -> share {yao: A -> A, B} x) 
      (send-ls {A} {A, B}
       (par {A} (read list int from "biomatching-input.txt"))) in
  let pB = share {yao: B -> A, B}
    (par {B} (read int from "biomatching-input.txt")) in
  reveal {A, B} (omin (map (dist pB) psA))


  -- let pB = map (fun x -> share {yao: B -> A, B} x) 
  --     (send-int {B} {A, B}
  --      (par {B} (read int from "biomatching-input.txt"))) in
