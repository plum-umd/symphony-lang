principal A B C

def main : (unit@all  -> unit@all)@all 
def main () =  let a = (par {A, B, C } (share [yao, unit : A -> {A,B,C}])) • in let b = (par {A, B, C } (share [yao, unit : A -> {A,B,C}] •)) in (mux case (L a):(( unit@all  + unit@all )@all) {L x →x;R y→y} )

