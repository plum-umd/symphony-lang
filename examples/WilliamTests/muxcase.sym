principal A B C

def main : (unit@all  -> unit@all)@all 
def main () =  let a = (par {A, B, C } (share [yao, unit : A -> {A,B,C}] •) )  in let b = (par {A, B, C } (share [yao, unit : A -> {A,B,C}] •)) in case (L a):(( unit@all  + unit@all )@all) {L x →x;R y→y}  

def main () =  let a = (par {A, B, C } (share [yao, unit : A -> {A,B,C}] •) )  in let b = (par {A, B, C } (share [yao, unit : A -> {A,B,C}] •)) in par {A, B, C<} (mux case (L a):(( unit[yao]@{A,B, C}@{A, B, C}  + unit[yao]@{A,B, C}@{A, B, C} )@{A, B, C}) {L x →x;R y→y}  )

