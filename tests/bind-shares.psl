principal A
principal B

def main () =
  par {A, B}
    let l = (share {spdz, ℤ : A → A,B} 0) ∷ [] in
    let a = share {spdz, ℤ : A → A,B} 0 in
    let l' = (a :: []) in
    l'

def expected = par {A} (share {spdz, ℤ : A → A} 0) :: []
