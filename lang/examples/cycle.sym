principal A B C

def main () = par {A,B,C}
  let x = par {A,B} (send [𝔹 : A → {B}] (par {A} read 𝔹 from "cycle.txt")) in
  let y = par {B,C} (send [𝔹 : B → {C}] (par {B} read 𝔹 from "cycle.txt")) in
  let z = par {C,A} (send [𝔹 : C → {A}] (par {C} read 𝔹 from "cycle.txt")) in
  let x = par {A,B} (send [𝔹 : A → {B}] (par {A} read 𝔹 from "cycle.txt")) in
  let y = par {B,C} (send [𝔹 : B → {C}] (par {B} read 𝔹 from "cycle.txt")) in
  let z = par {C,A} (send [𝔹 : C → {A}] (par {C} read 𝔹 from "cycle.txt")) in
  ()
